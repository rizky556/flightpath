<?php

/*
This script lets authorized users upload/remove syllabi for
certain courses, as well as set other information.

*/


function courseinfoentry_menu() {
  $items = array();
  
  $items["admin-tools/courseinfo"] = array(
    "title" => "Course Syllabus & Schedule Entry",
    "page_callback" => "courseinfoentry_display_list_courses",
    "access_callback" => TRUE,
    "target" => "_blank",    
    "description" => "Use this tool to update course syllabi & rotation schedules.",
    "icon" => fp_theme_location() . "/images/toolbox.gif",
    "weight" => 30,
  );
  
  return $items;
}


/**
 * Implementation of hook_menu().
 * This tells other parts of FlightPath where to display links
 * to this module, and what to include in the URL.
 *
 */
function z__courseinfoentry_menu() {
  
  $items = array();
  
  $items[] = array(
    "title" => "Course Syllabus & Schedule Entry",
    "url" => get_module_action_u_r_l("courseinfoentry"),
    "target" => "_blank",
    "description" => "Use this tool to update course syllabi & rotation schedules.",
    "location" => "admin_tools",
    "icon" => $GLOBALS["fp_system_settings"]["theme"] . "/images/toolbox.gif",
    "weight" => 100,
    "permission" => "can_update_course_info",
  );
    
  return $items;
}



function courseinfoentry_perm() {
  
  $perms = array (
    "can_update_course_info" => array(
      "title" => t("Can update course info"),
      "description" => t("This allows the user to access the Course Info Entry system
                        and edit syllabi and rotation schedules."),
    ),
  );

  return $perms;
  
}



/**
 * This implementation of hook_page_switchboard gets called whenever
 * we want to go to a particular page in this module.  Therefor, it will
 * look at REQUEST or GET or POST variables, to decide where to go.
 *
 */
function courseinfoentry_page_switchboard() {
  
  $db = $GLOBALS["courseinfoentry_db"];
  $screen = new AdvisingScreen();
  $GLOBALS["courseinfoentry_screen"] = $screen;
  
  $settings = $db->get_flightpath_settings();
  $de_catalog_year = $settings["current_catalog_year"];
  $GLOBALS["courseinfoentry_de_catalog_year"] = $de_catalog_year;    
  
  
  
  $perform_action = trim(addslashes($_REQUEST["perform_action"]));
    
  // Needs to happen first, since the session might not be init'd 
  // (because of IE)
  if ($perform_action == "display_report_ant_offering") {
    courseinfoentry_display_report_ant_offering();
    return;
  }  
  
  // Check to make sure the user has permission in this system.
  if (!user_has_permission("de_can_update_course_info")) {
    display_access_denied("Course Syllabus & Schedule Entry");
  }
  
  /*
  // Check to see if users are logged in and then perform actions.
  if ($_SESSION["fpCourseInfoEntryLoggedIn"] != true && $perform_action != "login")
  {
  	courseinfoentry_display_login();
  	return;
  }
  
  if ($perform_action == "login")
  {
  	courseinfoentry_performLogin();
  }
  
  if ($perform_action == "logout")
  {
  	courseinfoentry_performLogout();
    return;
  }*/
  
  
  if ($perform_action == "" || $perform_action == "list_courses")
  {
  	// By default, we are show a list of courses.
  	courseinfoentry_display_list_courses();
  }
  
  if ($perform_action == "edit_specific_course")
  {
  	courseinfoentry_display_edit_specific_course();
  }
  
  if ($perform_action == "perform_edit_specific_course")
  {
  	courseinfoentry_perform_edit_specific_course();
  }
  
  if ($perform_action == "display_reports_menu") {
    courseinfoentry_display_reports_menu();
  }
  
  


}


// TODO:  terms and such-- settings?
function courseinfoentry_display_report_ant_offering() {
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");
  
  $pC = "";

  $csv = "";
  $csv .= "SUBJ, NUM, ";
  
  $course_term_array = array();
  $check_term_array = array();
  $term_array = array("60","mm","81","82","40","41");
  $sem_array = array("none"=>"","60"=>"_spring","mm"=>"_may",
	"81"=>"_sum1","82"=>"_sum2","40"=>"_fall","41"=>"_win");

	for ($t = $de_catalog_year; $t <= $de_catalog_year + 5; $t++)
	{
		foreach($term_array as $x)
		{
		  $check_year = $t;
		  if ($x == 40 || $x == 41) {
		    $check_year = $check_year + 1;
		  }
		  
			$term_id = $check_year . $x;
			
			$check_term_array[] = $term_id;
			
			$csv .= " " . $sem_array[$x] . " of " . $t . " ($term_id) ,";
			
			// While we are here, we are going to get an array of ALL the courses
			// which have an entry for this term in our table.  This should make
			// it faster to look up later.
			$res = $db->db_query("SELECT * FROM course_rotation_schedule
													WHERE `term_id`='?' ", $term_id);
			while ($cur = $db->db_fetch_array($res)) {
			  $course_term_array[$term_id][$cur["course_id"]] = TRUE;
			}
			
		}
	}
  
	// Take off last comma of csv.
	$csv = substr($csv, 0, -1);	

	//var_dump($course_term_array);
	
	//debug_c_t($csv);
		
	$csv .= "\n";
	//return;
   
	$result = $db->db_query("SELECT * FROM courses
                        WHERE 
                        `catalog_year`='?'                         
                        AND `delete_flag`='0'
                        AND `exclude`='0'
                        ORDER BY `subject_id`, `course_num` ", $de_catalog_year);
	while ($cur = $db->db_fetch_array($result)) {
	  extract($cur, 3, "db");
	  //debugCT($db_subject_id . $db_course_num);
	  
	  $csv .= "$db_subject_id, $db_course_num, ";
	  
	  
	  // Now, get course offerings for the next X terms...
    foreach ($check_term_array as $term_id) {
			// See if this term is offered for this course
			//var_dump($term_id);
			//var_dump($course_term_array[$term_id]);
			//return;
			if ($course_term_array[$term_id][$db_course_id] == TRUE) {
				//$che = "X";
				$csv .= " X,";
			}
			else {
			  //$che = "";
			  $csv .= ",";
			}     
    }
	  
	  // Take off last comma of csv.
    $csv = substr($csv, 0, -1);	
    $csv .= "\n";
    
	}  
  
  header('Content-type: text/csv');
  header('Content-Disposition: attachment; filename="report_ant_offering.csv"');
  print $csv;
  
}

/**
 * Main menu for selecting a report you would like to see.
 *
 */
function courseinfoentry_display_reports_menu() {
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

  
  $screen = new AdvisingScreen();
  $pC = "";
  
  $pC .= "<a class='tenpt' href='$module_action_u_r_l'>Back to course list</a>
          <h2 style='margin-bottom: 10px; margin-top: 3px;'>View Reports</h2>";
  $pC .= "<ul>";

  $pC .= "<li><a href='$module_action_u_r_l&nosession=true&performAction=displayReportAntOffering'>[CSV] Anticipated Offerings - All Courses</a>
              - This report shows all courses in the catalog's anticipated offerings
              for the next 5 years.  Will be downloaded as a CSV file.
              <b>May take up to a minute to load.</b></li> ";
  
  $pC .= "</ul>";
  
  
 	$screen->page_content = $pC;
	$screen->page_has_search = false;
	$screen->page_title = "CourseInfo - Reports Menu";
	// send to the browser
	$screen->output_to_browser();

}


function courseinfoentry_display_login($msg = "")
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

	
	$pC .= "
 		<form action='$module_action_u_r_l' method='POST'>
 		<input type='hidden' name='performAction' value='login'>
 		$msg
 		Please login to the Course Info Entry system using your username and password.<br> 		
		<br><br>
 		<table border='0'>
		<tr>
			<td>Username:</td><td><input type=text name='userID' id='cwid_box' size='20'></td>
		</tr>
		<tr>
			<td>Password:</td><td><input type='password' name='password' size='20'></td>
		</tr></table>
          <input type='submit' value='Login -->'>
          
          
</form>

  		"; 

	$screen->page_content = $pC;
	$screen->page_has_search = false;
	$screen->page_on_load = "document.getElementById(\"cwid_box\").focus(); ";
	$screen->page_title = "CourseInfo - Login";
	// send to the browser
	$screen->output_to_browser();


}

/*
function courseinfoentry_performLogout()
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

	$_SESSION["fpCourseInfoEntryLoggedIn"] = false;
	$msg = "<div style='color:green'>
				You have been logged out of the Course Info Entry system.  
				If you are on a computer which
				is not your own, 
				you should close the web browser for added security.
							</div>"; 
	courseinfoentry_display_login($msg);
	$db->add_to_log("courseinfo","logout");
	
}


function courseinfoentry_performLogin()
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

	// Is the user logging in a valid faculty member, and
	// have user permissions to use this?
	$userID = trim(addslashes($_POST["userID"]));
	$password = trim(addslashes($_POST["password"]));

	if (!($cwid = fp_verifyFacultyLDAPLogin($userID, $password)))
	{
		$msg = "<div style='color:red'>Your Email Username/Password combination is not valid.  Check your spelling
						and try again.</div>";
		courseinfoentry_display_login($msg);
		return;		
	}

	// They made it through, but are they in the administrator's table?
		
	$res = $db->db_query("SELECT * FROM users WHERE `faculty_id`='$cwid'
							AND `permissions` LIKE '%deCanUpdateCourseInfo%' ");
	if ($db->db_num_rows($res) == 0)
	{
		$msg = "<div style='color:red'>You do not have access to the Course Info Entry System.
							You must request permission to use this system.
							Please <a href='javascript:popupreportcontact()'>click here</a> 
							to send an email to the software
							coordinator to request permission.</div>";
		courseinfoentry_display_login($msg);
		return;
	}

	// If we are here, then we have access.  Log us on in.
	$_SESSION["fpCourseInfoEntryLoggedIn"] = true;
	if ($_SESSION["fp_user_id"] == "")
	{
		$_SESSION["fp_user_id"] = $cwid;
		$_SESSION["fp_user_name"] = $db->getFacultyName($cwid);
	}
	$db->add_to_log("courseinfo","login");
	courseinfoentry_display_list_courses();
	

}
*/


function courseinfoentry_perform_edit_specific_course()
{
	// Update the database tables for a particular course.
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");


	$course_id = mysql_real_escape_string($_REQUEST["course_id"]);
	$subject_id = mysql_real_escape_string($_REQUEST["subject_id"]);
	$course_num = mysql_real_escape_string($_REQUEST["course_num"]);
	//$term_array = array("60","mm","81","82","40","41");
	$term_array = get_term_id_suffixes();

	$faculty_id = $_SESSION["fp_user_id"];

	for ($t = 1; $t <= 6; $t++)
	{
		$year = mysql_real_escape_string($_REQUEST["year$t"]);
		// delete the existing entries for this year & course here.
		// del where `term_id` LIKE '$year%' and courseid=courseid etc.
		$db->db_query("DELETE FROM course_rotation_schedule
						WHERE `course_id`='?'
						AND `term_id` LIKE '?%' ", $course_id, $year);
		//debugCT("delete $course_id where $year% ");
		/////////////////////////
		// Now, for x = 1 to 5,
		// if ($_request["cb_$year$x"] == "yes")
		// then insert into table... blah blah...

		foreach($term_array as $x)
		{
			if ($_REQUEST["cb_$year$x"] == "yes")
			{
				$db->db_query("INSERT INTO course_rotation_schedule
								(`faculty_id`,`course_id`,`term_id`,`entry_value`,`datetime`)
								values ('$faculty_id', '$course_id', '$year$x', '$subject_id~$course_num',NOW()) ");
				//debugCT("insert for $year$x ");
			}
		}

	}

	// Not anticipated check?

	// delete first...
	$db->db_query("delete from course_rotation_schedule
						where `course_id`='$course_id'
						and `term_id` = 'NOTA' ");

	if ($_REQUEST["not_anticipated"] == "yes")
	{
		$db->db_query("insert into course_rotation_schedule
						(`faculty_id`,`course_id`,`term_id`,`entry_value`,`datetime`)
						values ('$faculty_id', '$course_id', 'NOTA', '$subject_id~$course_num',NOW()) ");

	}

	// Should we delete the current syllabus?
	if ($_REQUEST["del_syllabus"] == "yes")
	{
		$filename = courseinfoentry_get_current_syllabus("", "", $course_id);
		if ($filename != "")
		{
			unlink("./custom/files/syllabi/$filename");
			//$db->db_query("DELETE FROM course_syllabi
			//				WHERE `course_perm_id`='$subject_id" . "_$course_num' ");
			$db->db_query("DELETE FROM course_syllabi
							WHERE `course_id`='$course_id' ");
			
		}
	}

	// Did the user try to upload a file?
	if (trim($_FILES["syllabus"]["tmp_name"]) != "")
	{
		$test = courseinfoentry_upload_attachment($course_id, $subject_id, $course_num);
		if (!$test)
		{
			// there was an error.
		} else {
			// success.

		}
	}

	$db->add_to_log("courseinfo","edit,$subject_id" . "_$course_num");

	courseinfoentry_display_edit_specific_course(courseinfoentry_get_success_msg("$subject_id $course_num was successfully
								updated at " . date ("g:i:sa") . "."));

}



function courseinfoentry_get_success_msg($msg)
{
	return "<div style='color: green; font-size: 16pt; padding-bottom:20px;'>$msg
			<div class='tenpt' style='color: black;'>You may continue editing, or return to the main menu
				by following the link above.</div>
			</div>
			";
}


function courseinfoentry_get_current_syllabus($subject_id = "", $course_num = "", $course_id = -1)
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");


	if ($course_id != -1) {
	  $query = "select * from course_syllabi
					where `course_id`='?' ";
	  $res = $db->db_query($query, $course_id);
	}
	else {
	  $query = "select * from course_syllabi
					where `course_perm_id`='?" . "_?' ";	  
	  $res = $db->db_query($query, $subject_id, $course_num);
	}
	
	$cur = $db->db_fetch_array($res);
	$filename = $cur["filename"];

	return $filename;
}


function courseinfoentry_display_edit_specific_course($msg = "", $bool_scroll = true)
{

	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");
	
	
	$course_id = $_REQUEST["course_id"];
	$subject_id = $_REQUEST["subject_id"];
	$course_num = $_REQUEST["course_num"];


	$pC .= "<a class='tenpt' href='$module_action_u_r_l&performAction=listCourses'>Back to Course List</a>";

	$course = new Course($course_id,false,null,false,$de_catalog_year);
	$course->catalog_year = $de_catalog_year;  // Since it may be 1900, force it!
	$course->load_descriptive_data(false, true, false, true);


	$pC .= "<h2 style='margin-bottom: 10px; margin-top: 3px;'>
			Edit Course Info for $subject_id $course_num</h2>$msg";

	$pC .= "<form id='mainform' action='$module_action_u_r_l' method='POST' enctype='multipart/form-data'>
			<input type='hidden' name='performAction' value='performEditSpecificCourse'>
			<input type='hidden' name='courseID' value='$course_id'>
			
			<input type='hidden' name='subjectID' value='$subject_id'>
			<input type='hidden' name='courseNum' value='$course_num'>
			
			";
	$course->catalog_year = $de_catalog_year;  // Since it may be 1900, force it!
	// Find out filename/link of current syllabus.
	$filelink = "- None currently entered -";
	$filename = courseinfoentry_get_current_syllabus("", "", $course_id);
	if ($filename != "")
	{
		$filelink = "$filename
					<input type='checkbox' name='del_syllabus' value='yes'> delete?";
	}

	$pC .= "<div class='tenpt'>
			<b>$course->title (" . $course->get_catalog_hours() . " hrs.)</b>
			<div class='tenpt'>$course->description</div>
			
			<br><br>
			<div style='margin-bottom: 3px;'><b>Sample Course Syllabus:</b> $filelink</div>
			<input type='file' name='syllabus' size='40'>
			  <div style='font-size: 8pt;'>
			  	Selecting a new file will replace any existing syllabus.
			  	Remember to click Save after selecting a file.
			  </div>";
	if ($filename != "")
	{

	  // Require the course_search module...
    include_module("course_search");
    
    // Reset since it was overwritten in the above include.
    $module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

    $syllabus_details = course_search_get_course_syllabus_details("", "", $course_id);
    $s_u_r_l = $syllabus_details["url"];
    
    
		$pC .= "<div style='margin-top: 5px;'>
			Syllabus may be downloaded using this address:<br>
			<a href='$s_u_r_l'>$s_u_r_l</a>
			</div>";
	}

	$pC .= "
			 <br><br>
			<b>Course Rotation Schedule:</b><br>
			Select semesters in which this course will be offered for
			the next five years.
			<br><br>
			";
	// We expect the term_id to be in the form of YYYYT
	// as in, 20021 or 20022.
	//$term_array = array("1","m","2","3","4","5");
	//$term_array = array("60","mm","81","82","40","41");
	$term_array = get_term_id_suffixes();
/*	$sem_array = array("none"=>"","1"=>"_spring","m"=>"_may",
	"2"=>"_sum1","3"=>"_sum2","4"=>"_fall","5"=>"_win", "6"=>"_win");
*/	
  //$sem_array = array("none"=>"","60"=>"_spring","mm"=>"_may",
	//"81"=>"_sum1","82"=>"_sum2","40"=>"_fall","41"=>"_win");

	$y = 1;
	for ($t = $de_catalog_year; $t <= $de_catalog_year + 5; $t++)
	{
		$pC .= "<input type='hidden' name='year$y' value='$t'>";
		foreach($term_array as $x)
		{
		  
		  $check_year = $t;
		  
		  //if ($x == 40 || $x == 41) {
		  //  $check_year = $check_year + 1;
		  //}
		  
			//$cb_disp_name = $sem_array[$x] . " $t";
			
			$new_course = new Course();
			$new_course->term_id = $check_year . $x;
			$cb_disp_name = $new_course->get_term_description(TRUE);
			
			$cbname = $new_course->term_id;
			
			
			$che = "";
			// See if this box should be checked...
			$res = $db->db_query("select * from course_rotation_schedule
								where `course_id`='?'
								and `term_id`='$check_year$x' ", $course_id);
			//debug_c_t("$t$x");
			if ($db->db_num_rows($res) > 0)
			{
				$che = "checked";
			}
			$pC .= "<label><input type='checkbox' name='cb_$cbname' value='yes' $che> $cb_disp_name &nbsp;&nbsp;</label>";
		}
		$pC .= "<br><br>";
		$y++;
	}

	$pC .= "</div>";

	// Not anticipated check.
	$che_n_a = "";
	$res = $db->db_query("SELECT * FROM course_rotation_schedule
						WHERE `course_id`='?'
						AND `term_id`='NOTA' ", $course_id);
	//debug_c_t("$t$x");
	if ($db->db_num_rows($res) > 0)
	{
		$che_n_a = "checked";
	}


	$pC .= "<div style='border: 1px solid grey; padding: 10px;'>
			<input type='checkbox' name='not_anticipated' value='yes' $che_n_a> Not Anticipated
				<div style='font-size: 9pt; margin-left: 20px;'>
				Checking this box means that the course is not anticipated
				to be offered within the time range above.  This will
				override any selections made above.
				</div>
			</div>
			<br>
			<input type='submit' value='Save'>
			
			";

	$pC .= "
			</form>";

	//$pC .= getJS();
	$screen->page_title = "CourseInfo - Edit Course";

	if ($bool_scroll)
	{
		$screen->page_scroll_top = trim($_POST["scroll_top"]);
	}
	$screen->page_hide_report_error = true;
	

	$screen->page_content = $pC;
	// send to the browser
	$screen->output_to_browser();


	if ($_REQUEST["serialize"] != "")
	{
		print "<br><textarea rows=20 cols=80>" . serialize($course) . "</textarea>";
	}


}




function courseinfoentry_upload_attachment($course_id, $subject_id, $course_num)
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");

	// If any files were attached, go ahead and upload them.

	$differencetolocaltime = 0;
	$universal_date_time     = date ("U") + $differencetolocaltime * 3600;
	$datetime              = date ("_y-j-m_g-i-sa", $universal_date_time);


	$tmp_filename = $_FILES["syllabus"]["tmp_name"];
	if (trim($tmp_filename) != "")
	{
		// Meaning, yes, a file was uploaded.
		$suffix = $datetime;
		// Create the new filename, based on the id's its been assigned.
		$original_filename = $_FILES["syllabus"]["name"];
		// replace problem characters...
		$original_filename = str_replace("'", "", $original_filename);
		$original_filename = str_replace('"', '', $original_filename);
		$original_filename = str_replace(",", "", $original_filename);

		$temp = split("\.", $original_filename);
		//$ext = substr($original_filename,strlen($original_filename) - 3);  // original ext.
		$ext = $temp[count($temp) - 1];  // get the original extension.
		$new_filename = $original_filename . ".$suffix.$ext";




		// Try to copy...
		if (!copy($tmp_filename, "./custom/files/syllabi/$new_filename"))
		{
			//add_to_log("error copying file~$original_filename $new_filename");
			print "<br><br>
					<h2>Oops!</h2>
					We're sorry, but there has been an error while trying to 
					copy your file.  Please
					try again later.
					";
			return false;
		}

		// If we are here, then there is success!  We should update the
		// table with the new filename, which is $new_filename.
		// delete the existing entry, if any.

		// We need to unlink any existing syllabus file...
		$filename = courseinfoentry_get_current_syllabus($subject_id, $course_num, $course_id);
		if ($filename != "")
		{
			if (!unlink("./custom/files/syllabi/$filename"))
			{
				print "<br><br>
					<h2>Oops!</h2>
					We're sorry, but there has been an error while trying to 
					copy your file.  The file $filename could not be deleted.
					Checking to see if it exists...
					";
				if (file_exists("./custom/files/syllabi/$filename")) {
				  print "<b>YES</b> the file does exist.  This may indicate
				        a file permissions problem with the server.  Please
				        inform your IT staff.";
				}
				else {
				  print "<b>NO</b> the file does not exist.  Perhaps
				          this is an old record, and the file was deleted
				          at some point.  You may continue using the system
				          normally.";
				}

			}
		}

		$db->db_query("delete from course_syllabi
						where `course_id`='?'	", $course_id);

		// Okay, now add the new entry.
		$db->db_query("insert into course_syllabi
						(`course_id`,`course_perm_id`,`filename`,`datetime`)
						values ('?','?" . "_?','?',NOW() )", $course_id, $subject_id, $course_num, $new_filename);



	}

}




function courseinfoentry_display_list_courses($msg = "")
{
	// Get our global variables.
	$screen = $GLOBALS["courseinfoentry_screen"];
	$db = $GLOBALS["courseinfoentry_db"];
	$de_catalog_year = $GLOBALS["courseinfoentry_de_catalog_year"];
	$module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");


  // Require the course_search module...
  //require_once(getModulePath("course_search") . "/course_search.module");
  include_module("course_search");
  // Reset since it was overwritten in the above include.
  $module_action_u_r_l = get_module_action_u_r_l("courseinfoentry");
	
	
	$pC = "";

	$cc = 1;

	// Get the "upper range" (UR) and
	// lower range (LR) of the courses in question...
	$ur = trim($_GET["ur"]);
	$lr = trim($_GET["lr"]);
	if ($ur == "")
	{ // meaning, no range was set.  Use A - AZZZZZ, so, all of the A's.
		$ur = $_SESSION["dec_ur"];
		$lr = $_SESSION["dec_lr"];
		if ($ur == "")
		{ // if still blank, assign it..
			$ur = "A";
			$lr = "AZZZZ";
		}

	}
	$_SESSION["dec_ur"] = $ur;
	$_SESSION["dec_lr"] = $lr;


	$pC .= "<div class='tenpt'>
				Welcome {$_SESSION["fp_user_name"]}! 
				<!-- <a href='$module_action_u_r_l&performAction=logout'>Logout?</a> -->
			</div>
			<h2 style='margin: 0px;'>Update Course Information</h2>$msg
			<div class='tenpt' style='margin-bottom: 20px;'>
				To update a course's sample syllabus or schedule,
				please select the course from the list below.
				<br>
				<a href='javascript: popupHelpWindow(\"help.php?i=6\");'>
					Need Help?  Click Here!</a>
			  &nbsp; 
			  - &nbsp;
			  <a href='$module_action_u_r_l&performAction=displayReportsMenu'>View Reports</a>
			</div>
			";

	$pC .= "<div style='margin-bottom:10px; text-align: center; padding: 3px;'>
			<a href='$module_action_u_r_l&performAction=listCourses&ur=A&lr=AZZZ'>A</a> &nbsp;
						<a href='$module_action_u_r_l&performAction=listCourses&ur=B&lr=BZZZ'>B</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=C&lr=CNZZ'>C-CN</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=CO&lr=CZZZ'>CO-CZ</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=D&lr=DZZZ'>D</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=E&lr=EZZZ'>E</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=F&lr=FZZZ'>F</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=G&lr=GZZZ'>G</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=H&lr=HZZZ'>H</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=I&lr=LZZZ'>I-L</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=M&lr=MRZZZ'>M-MR</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=MS&lr=MZZZ'>MS-MZ</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=N&lr=OZZZ'>N-O</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=P&lr=PZZZ'>P</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=Q&lr=RZZZ'>Q-R</a> &nbsp; 
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=S&lr=SOZZZ'>S-SO</a> &nbsp;
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=SP&lr=SPZZZ'>SP-SZ</a> &nbsp;
                       <a href='$module_action_u_r_l&performAction=listCourses&ur=T&lr=ZZZZZ'>T-Z</a>
				</div>                       
                       <hr>
                      
                       ";



	$pC .= "<table border='0' cellpadding='3' cellspacing='0'>
			<tr>
				<td class='tenpt' width='95%'>Course</td>
				<td class='tenpt'>Sch</td>
				<td class='tenpt'>Syl</td>
				<td class='tenpt'>Updated</td>
			</tr>";

	$result = $db->db_query("SELECT * FROM courses
                        WHERE 
                        `catalog_year`='?' AND
                        `subject_id` BETWEEN '?' AND '?'
                        AND `delete_flag`='0'
                        AND `exclude`='0'
                        ORDER BY `subject_id`, `course_num` ", $de_catalog_year, $ur, $lr);
	if (strlen($result))
	{
		while ($cur = mysql_fetch_array($result))
		{
			extract($cur, 3, "db");


			$syl = $sch = $updated = "";
			// Right here, maybe check to see if this course has
			// a syllabus and/or schedule entered?
			$filename = courseinfoentry_get_current_syllabus($db_subject_id, $db_course_num, $db_course_id);
			if ($filename != "")
			{
        $details = course_search_get_course_syllabus_details("", "", $db_course_id);
        $s_u_r_l = $details["url"];			  
        
				$syl = "<a href='$s_u_r_l'><img src='$screen->theme_location/images/document_icon.gif' border='0'></a>";
				
				$updated = strtotime($details["datetime"]);
			}
			$schedule_array = course_search_get_course_rotation_schedule($db_course_id, $de_catalog_year, 100, true);
			$not_ant = course_search_get_course_rotation_schedule_not_anticipated($db_course_id);
			if (count($schedule_array) > 0 || $not_ant == true)
			{
				$sch = "<img src='$screen->theme_location/images/small_check.gif'>";
				if ($not_ant)
				{
					$sch = "NA";
				}
				// When was the schedule last updated?
				$res2 = $db->db_query("SELECT * FROM course_rotation_schedule
								WHERE `course_id`='?' limit 1", $db_course_id);
				$cur2 = $db->db_fetch_array($res2);
				$updated2 = strtotime($cur2["datetime"]);
				if ($updated2 > $updated)
				{
					$updated = $updated2;
				}
			}

			if ($updated != "")
			{
				$updated = date("n/d/y",$updated);
			}


			$temp_course = new Course();
			$db_title = $temp_course->fix_title($db_title);

			$hrs = $db_min_hours;
			if (trim($db_min_hours) != trim($db_max_hours))
			{
				$hrs .= " - $db_max_hours";
			}

			$hrs .= " hrs.";

			$rep_hours = "";
			if ($db_repeat_hours > $db_min_hours)
			{
				$rep_hours = " rep to $db_repeat_hours hrs.";
			}

			// remove special chars from subject_id...
			$display_subject_id = $db_subject_id;
			$db_subject_id = urlencode($db_subject_id);


			$pC .= "<tr style='$spanstyle'>
					<td valign='top' width='90%'>";
			$pC .= "<div style='padding:3px;'>
						<a href='$module_action_u_r_l&perform_action=edit_specific_course&course_id=$db_course_id&subject_id=$db_subject_id&course_num=$db_course_num'>$display_subject_id $db_course_num - $db_title</a><!-- - $hrs$rep_hours --></div>";

			$pC .= "</td>
					<td align='center'>$sch</td>
					<td align='center'>$syl</td>
					<td align='center' style='font-size: 8pt;'>$updated</td>
						</tr>";

		} // while
	}// if


	$pC .= "</table>";

	$pC .= $screen->get_javascript_code();
	$screen->page_title = "CourseInfo - Courses";
	$screen->page_hide_report_error = true;
	$screen->page_content = $pC;
	// send to the browser
	$screen->output_to_browser();


}

